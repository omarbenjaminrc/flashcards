#separator:;
#html:true
¿Por qué es <b>crítica</b> la elección de la imagen base (<code>FROM ...</code>) en un Dockerfile?;Porque establece la <b>fundación</b> de tu imagen final, heredando sus características (tamaño, seguridad, herramientas). La elección siempre implica <b>compromisos (trade-offs)</b>.
¿Qué <b>factores clave</b> se deben considerar al elegir una imagen base?;Principalmente: <ol><li><b>Tamaño</b> (impacta en almacenamiento y transferencia)</li><li><b>Seguridad</b> (CVEs, superficie de ataque)</li><li><b>Ergonomía</b> (facilidad de uso/depuración, herramientas incluidas)</li><li>Compatibilidad (prerrequisito obvio)</li></ol>
¿Cómo impacta el <b>Tamaño</b> de la imagen base y qué variantes comunes buscan reducirlo?;Establece el <b>tamaño mínimo</b> de la imagen final. Bases más grandes = imágenes más grandes. Variantes como <code><b>-slim</b></code> o <code><b>-alpine</b></code> son más pequeñas al incluir menos componentes.
¿Cuál es la principal preocupación de <b>Seguridad</b> respecto a las imágenes base?;El número de <b>vulnerabilidades conocidas (CVEs)</b> y la <b>superficie de ataque</b> (cantidad de software instalado). Menos componentes = generalmente más seguro.
¿Qué caracteriza a las imágenes base altamente enfocadas en <b>Seguridad</b> (ej., Distroless, Chainguard) y cuál es su contrapartida?;Son extremadamente <b>minimalistas</b> (a menudo sin shell, gestor de paquetes, ni utilidades comunes) para reducir drásticamente la superficie de ataque. La contrapartida es una menor <b>ergonomía</b> (más difíciles de depurar interactivamente).
¿Qué significa <b>Ergonomía</b> en el contexto de una imagen base?;La <b>facilidad de uso</b>, especialmente para desarrollo y depuración. Depende de la presencia de herramientas como un shell (<code>bash</code>), utilidades (<code>curl</code>) o gestores de paquetes (<code>apt</code>, <code>apk</code>).
¿Cuál es el <b>trade-off fundamental</b> que se enfrenta a menudo al elegir una imagen base?;Generalmente entre <b>Tamaño/Seguridad</b> (imágenes mínimas) versus <b>Ergonomía/Facilidad de Uso</b> (imágenes más completas con más herramientas).
Para un <b>equilibrio general</b> entre tamaño, seguridad y facilidad de uso, ¿qué tipo de variante de imagen base suele ser una buena recomendación?;Las variantes marcadas como <code><b>-slim</b></code>.
¿Qué consideración técnica importante hay al usar imágenes basadas en <b>Alpine Linux</b>?;Utilizan <code><b>musl libc</b></code> en lugar de la más común <code>glibc</code> (usada por Debian/Ubuntu). Esto puede causar incompatibilidades con cierto software precompilado o requerir compilación específica.