#separator:;
#html:true
¿Cuáles son los <b>dos aspectos principales</b> del ciclo de vida del software que los contenedores buscan solucionar?;<b>1. Desarrollo:</b> Simplificar la configuración compleja, propensa a errores e inconsistente de los entornos. <br><b>2. Despliegue:</b> Simplificar el proceso manual, lento y propenso a errores de llevar la aplicación a producción.
¿Cuáles eran los <b>desafíos específicos</b> al configurar un entorno de <b>desarrollo</b> sin contenedores?;Era un proceso: <ul><li><b>Complejo:</b> muchas instalaciones manuales.</li><li><b>Propenso a errores:</b> fácil equivocarse.</li><li><b>Inconsistente:</b> diferencias de dependencias/versiones entre máquinas (problema de "funciona en mi máquina").</li></ul>
¿Cuáles eran los <b>desafíos específicos</b> al realizar el <b>despliegue</b> de aplicaciones sin contenedores?;Implicaba varios pasos manuales y propensos a errores: <ul><li>Crear/configurar servidor.</li><li>Instalar <b>dependencias</b> (programas/librerías necesarias).</li><li>Copiar el código de la aplicación.</li></ul>
¿Cómo <b>simplifican</b> los contenedores (ej. Docker) la configuración del entorno de <b>desarrollo</b>?;Permiten definir el entorno en un archivo (ej., con `docker-compose`) y crearlo con un comando simple (<code>docker-compose up</code>), asegurando <b>consistencia</b> entre sistemas.
¿Cómo <b>simplifican</b> los contenedores el proceso de <b>despliegue</b>?;Introducen un <b>paquete estandarizado</b> (Imagen de Contenedor) que contiene todo lo necesario, reduciendo drásticamente los pasos manuales.
¿Qué es una <b>Imagen de Contenedor</b> (Container Image)?;Un paquete de software <b>ligero, autónomo y ejecutable</b> que incluye <b>todo lo necesario</b> (código, dependencias del SO y runtime, librerías) para ejecutar una aplicación de forma aislada. Es la plantilla.
¿Qué elementos clave suele incluir una <b>Imagen de Contenedor</b>?;<ul><li>Dependencias del SO base</li><li>Dependencias del entorno de ejecución (ej. Python runtime)</li><li>Librerías específicas de la aplicación (ej. <code>SQLAlchemy</code>)</li><li>El código de la aplicación</li></ul>
¿Cuál es la diferencia fundamental entre una <b>Imagen de Contenedor</b> y un <b>Contenedor</b>?;La <b>Imagen</b> es la plantilla estática, inmutable (como una <i>clase</i> OOP o una receta). El <b>Contenedor</b> es una instancia en ejecución de esa imagen, es efímero y tiene estado (como un <i>objeto</i> OOP o el platillo cocinado).
¿Qué se necesita mínimamente en un servidor para <b>ejecutar un contenedor</b>?;<ol><li>Un <b>Entorno de Ejecución de Contenedores</b> (Container Runtime), como Docker Engine.</li><li>La <b>Imagen del Contenedor</b> que se quiere ejecutar.</li></ol>
¿Cuáles son los <b>beneficios clave</b> del uso de contenedores?;<ul><li><b>Simplicidad:</b> Menos complejidad en desarrollo y despliegue.</li><li><b>Confiabilidad:</b> Menos errores por configuraciones manuales.</li><li><b>Consistencia:</b> Entornos iguales en desarrollo y producción (resuelve "funciona en mi máquina").</li><li><b>Estandarización:</b> Formato único (imagen) para empaquetar y distribuir.</li></ul>
¿Por qué razón principal los contenedores se han vuelto <b>dominantes</b> en el desarrollo de software?;Porque abordan problemas fundamentales de <b>inconsistencia y complejidad</b> en el ciclo de vida del software, haciéndolo más <b>eficiente, rápido y seguro</b>.
¿Qué es la <b>Open Container Initiative (OCI)</b> y cuál es su objetivo principal?;Es una <b>colaboración industrial abierta</b> cuyo objetivo es crear y mantener <b>estándares abiertos</b> para los formatos de imagen y los tiempos de ejecución de contenedores, asegurando <b>interoperabilidad</b> y evitando el <i>vendor lock-in</i>.
¿Cuáles son las <b>tres especificaciones principales</b> definidas por la OCI?;<ol><li><b>Especificación de Imagen:</b> Define el formato de la imagen.</li><li><b>Especificación de Tiempo de Ejecución:</b> Describe cómo ejecutar un contenedor.</li><li><b>Especificación de Distribución:</b> Establece cómo distribuir imágenes (push/pull a registros).</li></ol>
¿Cuál es la relación entre <b>Docker</b> y la <b>OCI</b>?;<b>Docker</b> fue pionero y es una <b>implementación específica</b> que <b>cumple y sigue los estándares</b> definidos por la OCI. Una "Imagen Docker" adhiere a la especificación de imagen OCI.